{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","forno/tests/acceptance/forno-test.js","forno/tests/integration/components/cakes-test.js","forno/tests/integration/components/cakes/detailed-test.js","forno/tests/integration/components/cakes/image-test.js","forno/tests/integration/components/index-main-test.js","forno/tests/integration/components/map-test.js","forno/tests/integration/components/navbar-test.js","forno/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"forno/tests/acceptance/forno-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Acceptance | forno', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('visiting /', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n      assert.dom('nav').exists();\n      assert.dom('h2').hasText('Welcometo FORNO');\n      assert.dom('.main-div-text button.read-more-btn').hasText('Read more');\n      await (0, _testHelpers.click)('.main-div-text button.read-more-btn');\n      assert.equal((0, _testHelpers.currentURL)(), '/about');\n    });\n    (0, _qunit.test)('visiting /about', async function (assert) {\n      await (0, _testHelpers.visit)('/about');\n      assert.equal((0, _testHelpers.currentURL)(), '/about');\n      assert.dom('p').hasText('Riyas');\n    });\n    (0, _qunit.test)('navigating using the nav-bar', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('nav').exists();\n      assert.dom('.logo .web-logo').exists();\n      assert.dom('#ul-2 a.home').hasText('Home');\n      assert.dom('#ul-2 a.about').hasText('About');\n      assert.dom('#ul-2 a.contact').hasText('Contact');\n      await (0, _testHelpers.click)('nav #ul-2 a.about');\n      assert.equal((0, _testHelpers.currentURL)(), '/about');\n      await (0, _testHelpers.click)('nav #ul-2 a.contact');\n      assert.equal((0, _testHelpers.currentURL)(), '/contact');\n      await (0, _testHelpers.click)('nav #ul-2 a.home');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n    });\n  });\n});","define(\"forno/tests/integration/components/cakes-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | cakes', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders information about a rental property', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Cakes />\n      */\n      {\n        \"id\": \"bljVuMRW\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"cakes\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('article').hasClass('cakes');\n      assert.dom('article h3').hasText('Birthday Cake');\n      assert.dom('.bakery').hasText('Bakery : Forno');\n      assert.dom('.bakery-location').hasText('Chennai');\n      assert.dom('.cake-price').hasText('Rs.2000');\n    });\n  });\n});","define(\"forno/tests/integration/components/cakes/detailed-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | cakes/detailed', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Cakes::Detailed />\n      */\n      {\n        \"id\": \"YInlFlxY\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"cakes/detailed\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Cakes::Detailed>\n              template block text\n            </Cakes::Detailed>\n          \n      */\n      {\n        \"id\": \"+gcKrFnQ\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"cakes/detailed\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"forno/tests/integration/components/cakes/image-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | cakes/image', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given image', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Cakes :: Image\n              src=\"assets/images/chocolate-birthday-cake.jpg\"\n              alt=\"main-img\"\n            />\n          \n      */\n      {\n        \"id\": \"txYwHhuI\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,\\\"::\\\",\\\"\\\"],[24,\\\"Image\\\",\\\"\\\"],[24,\\\"src\\\",\\\"assets/images/chocolate-birthday-cake.jpg\\\"],[24,\\\"alt\\\",\\\"main-img\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"cakes\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.image img').exists().hasAttribute('src', 'https://www.fnp.com/images/pr/l/v20200707214916/chocolate-caramel-fudge-cake_1.jpg').hasAttribute('alt', 'image of birthday cake');\n    });\n    (0, _qunit.test)('clicking on the component toggles its size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Cakes :: Image\n            src=\"assets/images/chocolate-birthday-cake.jpg\"\n            alt=\"main-img\"\n          />\n        \n      */\n      {\n        \"id\": \"iZ8nZUHb\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],[[24,\\\"::\\\",\\\"\\\"],[24,\\\"Image\\\",\\\"\\\"],[24,\\\"src\\\",\\\"assets/images/chocolate-birthday-cake.jpg\\\"],[24,\\\"alt\\\",\\\"main-img\\\"]],null,null],[1,\\\"\\\\n  \\\"]],[],false,[\\\"cakes\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.image').exists();\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').hasClass('large');\n      assert.dom('.image small').hasText('View Smaller');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n    });\n  });\n});","define(\"forno/tests/integration/components/index-main-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | index-main', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('test index main component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <IndexMain></IndexMain>\n      */\n      {\n        \"id\": \"PrH1HnWk\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"index-main\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.main-div').exists();\n      assert.dom('.main-div-img').exists();\n      assert.dom('#main-img').exists();\n      assert.dom('.main-div-text').exists();\n      assert.dom('h2').hasText('Welcometo FORNO');\n      assert.dom('p').hasText('Love At First Bite');\n      assert.dom('.read-more-btn').exists();\n    });\n  });\n});","define(\"forno/tests/integration/components/map-test\", [\"@ember/template-factory\", \"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_templateFactory, _qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | map', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Map />\n      */\n      {\n        \"id\": \"FZvfDrOZ\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"map\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Map>\n              template block text\n            </Map>\n          \n      */\n      {\n        \"id\": \"pG9iAcg5\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"map\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"forno/tests/integration/components/navbar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | navbar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n  });\n});","define(\"forno/tests/test-helper\", [\"forno/app\", \"forno/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define('forno/config/environment', [], function() {\n  var prefix = 'forno';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('forno/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}